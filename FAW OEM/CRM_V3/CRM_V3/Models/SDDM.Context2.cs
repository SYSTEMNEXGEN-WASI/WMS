//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRM_V3.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SDDBContext : DbContext
    {
        public SDDBContext()
            : base("name=SDDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dealer> Dealers { get; set; }
    
        public virtual ObjectResult<string> Sp_Autocode_CusType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Autocode_CusType");
        }
    
        public virtual ObjectResult<string> sp_AutoGenCusCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_AutoGenCusCode");
        }
    
        public virtual ObjectResult<string> Sp_AutoGenVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_AutoGenVendor");
        }
    
        public virtual ObjectResult<string> Sp_City_autocode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_City_autocode");
        }
    
        public virtual ObjectResult<string> sp_CompanyEmp_AutoCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CompanyEmp_AutoCode");
        }
    
        public virtual ObjectResult<string> sp_CostCenter_Auto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CostCenter_Auto");
        }
    
        public virtual ObjectResult<sp_Item_ItemLocation_tbll_Result> sp_Item_ItemLocation_tbll(string companyCode, string itemCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Item_ItemLocation_tbll_Result>("sp_Item_ItemLocation_tbll", companyCodeParameter, itemCodeParameter);
        }
    
        public virtual ObjectResult<string> Sp_ItemBrand_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_ItemBrand_Code");
        }
    
        public virtual ObjectResult<string> Sp_ItemCategory_autocode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_ItemCategory_autocode");
        }
    
        public virtual ObjectResult<sp_ItemMasterDataLookup_Result> sp_ItemMasterDataLookup(string companyCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemMasterDataLookup_Result>("sp_ItemMasterDataLookup", companyCodeParameter);
        }
    
        public virtual ObjectResult<string> Sp_ItemRefNo_code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_ItemRefNo_code");
        }
    
        public virtual ObjectResult<sp_ItemTransLocation_GridDate_Result> sp_ItemTransLocation_GridDate(string companyCode, string itemTransLocCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemTransLocCodeParameter = itemTransLocCode != null ?
                new ObjectParameter("ItemTransLocCode", itemTransLocCode) :
                new ObjectParameter("ItemTransLocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemTransLocation_GridDate_Result>("sp_ItemTransLocation_GridDate", companyCodeParameter, itemTransLocCodeParameter);
        }
    
        public virtual ObjectResult<sp_ItemTransLocation_SubString_Result> sp_ItemTransLocation_SubString(string companyCode, string itemTransLocCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemTransLocCodeParameter = itemTransLocCode != null ?
                new ObjectParameter("ItemTransLocCode", itemTransLocCode) :
                new ObjectParameter("ItemTransLocCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemTransLocation_SubString_Result>("sp_ItemTransLocation_SubString", companyCodeParameter, itemTransLocCodeParameter);
        }
    
        public virtual ObjectResult<string> Sp_SubCat_Auto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_SubCat_Auto");
        }
    
        public virtual ObjectResult<string> Sp_Unit_AutoCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Unit_AutoCode");
        }
    
        public virtual ObjectResult<string> Sp_VendorType_autoCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_VendorType_autoCode");
        }
    
        public virtual ObjectResult<string> sp_Department()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Department");
        }
    
        public virtual ObjectResult<string> Sp_Designation_autocode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Designation_autocode");
        }
    
        public virtual ObjectResult<string> Sp_Qualification_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Qualification_Code");
        }
    
        public virtual ObjectResult<string> Sp_Status_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Status_Code");
        }
    
        public virtual ObjectResult<string> Sp_Shipping_Code()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Shipping_Code");
        }
    
        public virtual ObjectResult<string> Sp_TermsAndCondition_AutoCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_TermsAndCondition_AutoCode");
        }
    
        public virtual ObjectResult<sp_GetDataTransDetTransMas_Result> sp_GetDataTransDetTransMas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDataTransDetTransMas_Result>("sp_GetDataTransDetTransMas");
        }
    
        public virtual ObjectResult<string> sp_AutoGen_POTCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_AutoGen_POTCode");
        }
    
        public virtual int SP_UpdateItem(string companyCode, string itemCode, Nullable<double> saleRate, Nullable<double> saleGSTPer, Nullable<double> purchaseRate, Nullable<double> purchaseGSTPer)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var saleRateParameter = saleRate.HasValue ?
                new ObjectParameter("SaleRate", saleRate) :
                new ObjectParameter("SaleRate", typeof(double));
    
            var saleGSTPerParameter = saleGSTPer.HasValue ?
                new ObjectParameter("SaleGSTPer", saleGSTPer) :
                new ObjectParameter("SaleGSTPer", typeof(double));
    
            var purchaseRateParameter = purchaseRate.HasValue ?
                new ObjectParameter("PurchaseRate", purchaseRate) :
                new ObjectParameter("PurchaseRate", typeof(double));
    
            var purchaseGSTPerParameter = purchaseGSTPer.HasValue ?
                new ObjectParameter("PurchaseGSTPer", purchaseGSTPer) :
                new ObjectParameter("PurchaseGSTPer", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateItem", companyCodeParameter, itemCodeParameter, saleRateParameter, saleGSTPerParameter, purchaseRateParameter, purchaseGSTPerParameter);
        }
    
        public virtual ObjectResult<sp_ItemMasterDataLookup1_Result> sp_ItemMasterDataLookup1(string companyCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemMasterDataLookup1_Result>("sp_ItemMasterDataLookup1", companyCodeParameter);
        }
    
        public virtual ObjectResult<sp_ItemMasterDataLookup2_Result> sp_ItemMasterDataLookup2(string companyCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ItemMasterDataLookup2_Result>("sp_ItemMasterDataLookup2", companyCodeParameter);
        }
    
        public virtual ObjectResult<sp_get_ItemTransLocDetail_Result> sp_get_ItemTransLocDetail(string companyCode, string transNo)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var transNoParameter = transNo != null ?
                new ObjectParameter("TransNo", transNo) :
                new ObjectParameter("TransNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_ItemTransLocDetail_Result>("sp_get_ItemTransLocDetail", companyCodeParameter, transNoParameter);
        }
    
        public virtual ObjectResult<sp_Get_ItemTransItems_Result> sp_Get_ItemTransItems(string companyCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ItemTransItems_Result>("sp_Get_ItemTransItems", companyCodeParameter);
        }
    
        public virtual int sp_ItemStock_Update(string companyCode, string itemCode, string itemTransLocCode, Nullable<double> issQty)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemTransLocCodeParameter = itemTransLocCode != null ?
                new ObjectParameter("ItemTransLocCode", itemTransLocCode) :
                new ObjectParameter("ItemTransLocCode", typeof(string));
    
            var issQtyParameter = issQty.HasValue ?
                new ObjectParameter("IssQty", issQty) :
                new ObjectParameter("IssQty", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ItemStock_Update", companyCodeParameter, itemCodeParameter, itemTransLocCodeParameter, issQtyParameter);
        }
    
        public virtual ObjectResult<ItemLookUpWithLocation_Result> ItemLookUpWithLocation(string itemDesc, string itemNo, string itemTransLocDesc)
        {
            var itemDescParameter = itemDesc != null ?
                new ObjectParameter("ItemDesc", itemDesc) :
                new ObjectParameter("ItemDesc", typeof(string));
    
            var itemNoParameter = itemNo != null ?
                new ObjectParameter("ItemNo", itemNo) :
                new ObjectParameter("ItemNo", typeof(string));
    
            var itemTransLocDescParameter = itemTransLocDesc != null ?
                new ObjectParameter("ItemTransLocDesc", itemTransLocDesc) :
                new ObjectParameter("ItemTransLocDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemLookUpWithLocation_Result>("ItemLookUpWithLocation", itemDescParameter, itemNoParameter, itemTransLocDescParameter);
        }
    
        public virtual int sp_ItemStockRecQty_Update(string companyCode, string itemCode, string itemTransLocCode, Nullable<double> recQty)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var itemTransLocCodeParameter = itemTransLocCode != null ?
                new ObjectParameter("ItemTransLocCode", itemTransLocCode) :
                new ObjectParameter("ItemTransLocCode", typeof(string));
    
            var recQtyParameter = recQty.HasValue ?
                new ObjectParameter("RecQty", recQty) :
                new ObjectParameter("RecQty", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ItemStockRecQty_Update", companyCodeParameter, itemCodeParameter, itemTransLocCodeParameter, recQtyParameter);
        }
    
        public virtual int Sp_Update_SaleInvoiceDetail(Nullable<double> saleRetQty, string companyCode, string invoiceNo, string itemCode)
        {
            var saleRetQtyParameter = saleRetQty.HasValue ?
                new ObjectParameter("SaleRetQty", saleRetQty) :
                new ObjectParameter("SaleRetQty", typeof(double));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_SaleInvoiceDetail", saleRetQtyParameter, companyCodeParameter, invoiceNoParameter, itemCodeParameter);
        }
    
        public virtual ObjectResult<string> sp_AutoGen_COCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_AutoGen_COCode");
        }
    
        public virtual ObjectResult<string> sp_AutoGen_ChargeOutNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_AutoGen_ChargeOutNo");
        }
    }
}
