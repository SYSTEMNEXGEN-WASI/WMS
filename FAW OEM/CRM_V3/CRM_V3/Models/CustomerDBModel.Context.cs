//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Linq;

public partial class sngonclo_BMSEntities : DbContext
{
    public sngonclo_BMSEntities()
        : base("name=sngonclo_BMSEntities")
    {
    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }

    public virtual DbSet<Accompany> Accompanies { get; set; }
    public virtual DbSet<Activity> Activities { get; set; }
    public virtual DbSet<AdjustedVehicle> AdjustedVehicles { get; set; }
    public virtual DbSet<AdvancePayment> AdvancePayments { get; set; }
    public virtual DbSet<AllocLetter> AllocLetters { get; set; }
    public virtual DbSet<Bank> Banks { get; set; }
    public virtual DbSet<Bay> Bays { get; set; }
    public virtual DbSet<BookChkList> BookChkLists { get; set; }
    public virtual DbSet<BookingFormParam> BookingFormParams { get; set; }
    public virtual DbSet<BookingReceipt> BookingReceipts { get; set; }
    public virtual DbSet<BookingReceiptBookingOrderDetail> BookingReceiptBookingOrderDetails { get; set; }
    public virtual DbSet<BookingReceiptInstrumentDetail> BookingReceiptInstrumentDetails { get; set; }
    public virtual DbSet<BookingType> BookingTypes { get; set; }
    public virtual DbSet<BookOrdChklist> BookOrdChklists { get; set; }
    public virtual DbSet<BookOrdInsDetail> BookOrdInsDetails { get; set; }
    public virtual DbSet<BookOrdMaster> BookOrdMasters { get; set; }
    public virtual DbSet<BookOrdVehDetail> BookOrdVehDetails { get; set; }
    public virtual DbSet<Branch> Branches { get; set; }
    public virtual DbSet<Brand> Brands { get; set; }
    public virtual DbSet<BrandUC> BrandUCS { get; set; }
    public virtual DbSet<ChangePartNo> ChangePartNoes { get; set; }
    public virtual DbSet<ChangeVehicleCu> ChangeVehicleCus { get; set; }
    public virtual DbSet<ChargeOutMaster> ChargeOutMasters { get; set; }
    public virtual DbSet<City> Cities { get; set; }
    public virtual DbSet<ClaimRequestType> ClaimRequestTypes { get; set; }
    public virtual DbSet<Color1> Color1 { get; set; }
    public virtual DbSet<ComplainCategory> ComplainCategories { get; set; }
    public virtual DbSet<ComplainType> ComplainTypes { get; set; }
    public virtual DbSet<CounterMeasure> CounterMeasures { get; set; }
    public virtual DbSet<CounterSaleDetail> CounterSaleDetails { get; set; }
    public virtual DbSet<CounterSaleMaster> CounterSaleMasters { get; set; }
    public virtual DbSet<Country> Countries { get; set; }
    public virtual DbSet<CRM_EnquiryDetail> CRM_EnquiryDetail { get; set; }
    public virtual DbSet<CRM_EnquiryMaster> CRM_EnquiryMaster { get; set; }
    public virtual DbSet<CRM_EnquiryMode> CRM_EnquiryMode { get; set; }
    public virtual DbSet<CRM_EnquirySource> CRM_EnquirySource { get; set; }
    public virtual DbSet<CRM_FollowUpDetail> CRM_FollowUpDetail { get; set; }
    public virtual DbSet<CRM_Post_PostServiceFollowup> CRM_Post_PostServiceFollowup { get; set; }
    public virtual DbSet<CRM_Prospect> CRM_Prospect { get; set; }
    public virtual DbSet<CRM_ProspectType> CRM_ProspectType { get; set; }
    public virtual DbSet<CRM_Status> CRM_Status { get; set; }
    public virtual DbSet<CRM_Subjects> CRM_Subjects { get; set; }
    public virtual DbSet<CRM_TaskType> CRM_TaskType { get; set; }
    public virtual DbSet<CusEmployee> CusEmployees { get; set; }
    public virtual DbSet<CusSatCategory> CusSatCategories { get; set; }
    public virtual DbSet<CusSatChkList> CusSatChkLists { get; set; }
    public virtual DbSet<CusSatDetail> CusSatDetails { get; set; }
    public virtual DbSet<CusSatMaster> CusSatMasters { get; set; }
    public virtual DbSet<Customer> Customers { get; set; }
    public virtual DbSet<CustomerEstimateMaster> CustomerEstimateMasters { get; set; }
    public virtual DbSet<CustomerInvoice> CustomerInvoices { get; set; }
    public virtual DbSet<CustomerQuotDetail> CustomerQuotDetails { get; set; }
    public virtual DbSet<CustomerQuotMaster> CustomerQuotMasters { get; set; }
    public virtual DbSet<CustomerVehicle> CustomerVehicles { get; set; }
    public virtual DbSet<CustomerVisit> CustomerVisits { get; set; }
    public virtual DbSet<DCDetail> DCDetails { get; set; }
    public virtual DbSet<DCMaster> DCMasters { get; set; }
    public virtual DbSet<Dealer> Dealers { get; set; }
    public virtual DbSet<DealerContPerson> DealerContPersons { get; set; }
    public virtual DbSet<DealerEmp> DealerEmps { get; set; }
    public virtual DbSet<DealerFacility> DealerFacilities { get; set; }
    public virtual DbSet<Defect> Defects { get; set; }
    public virtual DbSet<DefectCategory> DefectCategories { get; set; }
    public virtual DbSet<DelChkList> DelChkLists { get; set; }
    public virtual DbSet<Department> Departments { get; set; }
    public virtual DbSet<Designation> Designations { get; set; }
    public virtual DbSet<DocumentCheckList> DocumentCheckLists { get; set; }
    public virtual DbSet<DOReason> DOReasons { get; set; }
    public virtual DbSet<Event> Events { get; set; }
    public virtual DbSet<EventLog> EventLogs { get; set; }
    public virtual DbSet<EWMaster> EWMasters { get; set; }
    public virtual DbSet<ExpenditureDetail> ExpenditureDetails { get; set; }
    public virtual DbSet<ExpenditureMaster> ExpenditureMasters { get; set; }
    public virtual DbSet<Facility> Facilities { get; set; }
    public virtual DbSet<FCCCategory> FCCCategories { get; set; }
    public virtual DbSet<FCCDetail> FCCDetails { get; set; }
    public virtual DbSet<FCCJob> FCCJobs { get; set; }
    public virtual DbSet<FCCMaster> FCCMasters { get; set; }
    public virtual DbSet<FICCategory> FICCategories { get; set; }
    public virtual DbSet<FICDetail> FICDetails { get; set; }
    public virtual DbSet<FICJobCardDetail> FICJobCardDetails { get; set; }
    public virtual DbSet<FICJob> FICJobs { get; set; }
    public virtual DbSet<FICMaster> FICMasters { get; set; }
    public virtual DbSet<FIRJobCategory> FIRJobCategories { get; set; }
    public virtual DbSet<FIRJob> FIRJobs { get; set; }
    public virtual DbSet<FollowDetail> FollowDetails { get; set; }
    public virtual DbSet<FollowMaster> FollowMasters { get; set; }
    public virtual DbSet<GatePassTemp> GatePassTemps { get; set; }
    public virtual DbSet<GRNDetail> GRNDetails { get; set; }
    public virtual DbSet<GRNMaster> GRNMasters { get; set; }
    public virtual DbSet<GSTInvoice> GSTInvoices { get; set; }
    public virtual DbSet<Guarantor> Guarantors { get; set; }
    public virtual DbSet<InquiryMode> InquiryModes { get; set; }
    public virtual DbSet<InsuranceCompany> InsuranceCompanies { get; set; }
    public virtual DbSet<InterRepJobMaster> InterRepJobMasters { get; set; }
    public virtual DbSet<InvoiceSubType> InvoiceSubTypes { get; set; }
    public virtual DbSet<InvoiceType> InvoiceTypes { get; set; }
    public virtual DbSet<Item> Items { get; set; }
    public virtual DbSet<ItemCategory> ItemCategories { get; set; }
    public virtual DbSet<ItemStatu> ItemStatus { get; set; }
    public virtual DbSet<ItemStock> ItemStocks { get; set; }
    public virtual DbSet<JENDetail> JENDetails { get; set; }
    public virtual DbSet<JENMaster> JENMasters { get; set; }
    public virtual DbSet<JENPartsDetail> JENPartsDetails { get; set; }
    public virtual DbSet<JobApprovalMaster> JobApprovalMasters { get; set; }
    public virtual DbSet<JobCardConDetail> JobCardConDetails { get; set; }
    public virtual DbSet<JobCardLubricateDetail> JobCardLubricateDetails { get; set; }
    public virtual DbSet<JobCardMaster> JobCardMasters { get; set; }
    public virtual DbSet<JobCardPartsDetail> JobCardPartsDetails { get; set; }
    public virtual DbSet<JobCardSupPartsDetail> JobCardSupPartsDetails { get; set; }
    public virtual DbSet<JobCategory> JobCategories { get; set; }
    public virtual DbSet<JobTypeMaster> JobTypeMasters { get; set; }
    public virtual DbSet<LaborDetail> LaborDetails { get; set; }
    public virtual DbSet<LeaseBank> LeaseBanks { get; set; }
    public virtual DbSet<Location> Locations { get; set; }
    public virtual DbSet<LookUpDetail> LookUpDetails { get; set; }
    public virtual DbSet<LookUpMaster> LookUpMasters { get; set; }
    public virtual DbSet<MaintainenceSchedule> MaintainenceSchedules { get; set; }
    public virtual DbSet<OutgoingPaymentDetail> OutgoingPaymentDetails { get; set; }
    public virtual DbSet<OutgoingPaymentMaster> OutgoingPaymentMasters { get; set; }
    public virtual DbSet<PartsDeliveryType> PartsDeliveryTypes { get; set; }
    public virtual DbSet<PartsLocation> PartsLocations { get; set; }
    public virtual DbSet<PartsLocTransMaster> PartsLocTransMasters { get; set; }
    public virtual DbSet<PartsSubLocation> PartsSubLocations { get; set; }
    public virtual DbSet<PartsTransLocation> PartsTransLocations { get; set; }
    public virtual DbSet<PartsWarrantyDetail> PartsWarrantyDetails { get; set; }
    public virtual DbSet<PartWarrantyMaster> PartWarrantyMasters { get; set; }
    public virtual DbSet<PaymentMode> PaymentModes { get; set; }
    public virtual DbSet<PaymentReceiptMaster> PaymentReceiptMasters { get; set; }
    public virtual DbSet<PaymentVendorDetail> PaymentVendorDetails { get; set; }
    public virtual DbSet<PaymentVendorMaster> PaymentVendorMasters { get; set; }
    public virtual DbSet<PDICheckSheetJobCategory> PDICheckSheetJobCategories { get; set; }
    public virtual DbSet<PDICheckSheetJob> PDICheckSheetJobs { get; set; }
    public virtual DbSet<PNL_ItemDetails> PNL_ItemDetails { get; set; }
    public virtual DbSet<PODetail> PODetails { get; set; }
    public virtual DbSet<POMaster> POMasters { get; set; }
    public virtual DbSet<POTempDetail> POTempDetails { get; set; }
    public virtual DbSet<POTempMaster> POTempMasters { get; set; }
    public virtual DbSet<PPRDetail> PPRDetails { get; set; }
    public virtual DbSet<PriceType> PriceTypes { get; set; }
    public virtual DbSet<ProdRecAccompany> ProdRecAccompanies { get; set; }
    public virtual DbSet<ProdRecDetail> ProdRecDetails { get; set; }
    public virtual DbSet<ProdRecMaster> ProdRecMasters { get; set; }
    public virtual DbSet<Profession> Professions { get; set; }
    public virtual DbSet<PSTInvoice> PSTInvoices { get; set; }
    public virtual DbSet<PurInvMaster> PurInvMasters { get; set; }
    public virtual DbSet<QuotDetail> QuotDetails { get; set; }
    public virtual DbSet<QuotMaster> QuotMasters { get; set; }
    public virtual DbSet<QuotRespDetail> QuotRespDetails { get; set; }
    public virtual DbSet<QuotRespMaster> QuotRespMasters { get; set; }
    public virtual DbSet<ReasonCounterMeasure> ReasonCounterMeasures { get; set; }
    public virtual DbSet<Reason> Reasons { get; set; }
    public virtual DbSet<ReasonsForRepeatedJob> ReasonsForRepeatedJobs { get; set; }
    public virtual DbSet<ReceiptHead> ReceiptHeads { get; set; }
    public virtual DbSet<Receiver> Receivers { get; set; }
    public virtual DbSet<ReceivingChkList> ReceivingChkLists { get; set; }
    public virtual DbSet<RepeatJobCardMappingMaster> RepeatJobCardMappingMasters { get; set; }
    public virtual DbSet<RequisitionDetail> RequisitionDetails { get; set; }
    public virtual DbSet<RequisitionMaster> RequisitionMasters { get; set; }
    public virtual DbSet<RGRDetail> RGRDetails { get; set; }
    public virtual DbSet<RGRMaster> RGRMasters { get; set; }
    public virtual DbSet<SecurityApplication> SecurityApplications { get; set; }
    public virtual DbSet<SecurityCompany> SecurityCompanies { get; set; }
    public virtual DbSet<SecurityForm> SecurityForms { get; set; }
    public virtual DbSet<SecurityGroup> SecurityGroups { get; set; }
    public virtual DbSet<SecurityGroupAccess> SecurityGroupAccesses { get; set; }
    public virtual DbSet<SecurityObject> SecurityObjects { get; set; }
    public virtual DbSet<SecurityObjectRight> SecurityObjectRights { get; set; }
    public virtual DbSet<SecurityRoleAccess> SecurityRoleAccesses { get; set; }
    public virtual DbSet<SecurityUser> SecurityUsers { get; set; }
    public virtual DbSet<SecurityUserAccess> SecurityUserAccesses { get; set; }
    public virtual DbSet<SecurityUserAccessCRM> SecurityUserAccessCRMs { get; set; }
    public virtual DbSet<SecurityUserGroup> SecurityUserGroups { get; set; }
    public virtual DbSet<ServiceSchedule> ServiceSchedules { get; set; }
    public virtual DbSet<Shop> Shops { get; set; }
    public virtual DbSet<SIMaster> SIMasters { get; set; }
    public virtual DbSet<SIRDetail> SIRDetails { get; set; }
    public virtual DbSet<SIRMaster> SIRMasters { get; set; }
    public virtual DbSet<SODetail> SODetails { get; set; }
    public virtual DbSet<SOMaster> SOMasters { get; set; }
    public virtual DbSet<StockIssue> StockIssues { get; set; }
    public virtual DbSet<StockIssueDetail> StockIssueDetails { get; set; }
    public virtual DbSet<StockReturn> StockReturns { get; set; }
    public virtual DbSet<StockReturnDetail> StockReturnDetails { get; set; }
    public virtual DbSet<StockSalesTarget> StockSalesTargets { get; set; }
    public virtual DbSet<Table1> Table1 { get; set; }
    public virtual DbSet<TransferBooking> TransferBookings { get; set; }
    public virtual DbSet<Unit> Units { get; set; }
    public virtual DbSet<VehExpHead> VehExpHeads { get; set; }
    public virtual DbSet<Vehicle1> Vehicle1 { get; set; }
    public virtual DbSet<VehicleColor> VehicleColors { get; set; }
    public virtual DbSet<VehicleDelChkList> VehicleDelChkLists { get; set; }
    public virtual DbSet<VehicleDeliveryDetail> VehicleDeliveryDetails { get; set; }
    public virtual DbSet<VehicleDeliveryMaster> VehicleDeliveryMasters { get; set; }
    public virtual DbSet<VehicleLocation> VehicleLocations { get; set; }
    public virtual DbSet<VehicleLocTransMaster> VehicleLocTransMasters { get; set; }
    public virtual DbSet<VehicleOther> VehicleOthers { get; set; }
    public virtual DbSet<VehicleReceiptType> VehicleReceiptTypes { get; set; }
    public virtual DbSet<VehicleReturnMaster> VehicleReturnMasters { get; set; }
    public virtual DbSet<VehicleSalesTarget> VehicleSalesTargets { get; set; }
    public virtual DbSet<VehicleSpec> VehicleSpecs { get; set; }
    public virtual DbSet<VehicleSpecChkList> VehicleSpecChkLists { get; set; }
    public virtual DbSet<VehicleStock> VehicleStocks { get; set; }
    public virtual DbSet<VehicleTaxDetail> VehicleTaxDetails { get; set; }
    public virtual DbSet<VehicleType> VehicleTypes { get; set; }
    public virtual DbSet<Vendor> Vendors { get; set; }
    public virtual DbSet<VersionMapping> VersionMappings { get; set; }
    public virtual DbSet<VersionMappingWithColor> VersionMappingWithColors { get; set; }
    public virtual DbSet<WarrantyFlatRate> WarrantyFlatRates { get; set; }
    public virtual DbSet<WarrentyClaimRequest> WarrentyClaimRequests { get; set; }
    public virtual DbSet<WithOutWarrantyRate> WithOutWarrantyRates { get; set; }
    public virtual DbSet<DealerCategory> DealerCategories { get; set; }
    public virtual DbSet<DealershipType> DealershipTypes { get; set; }
    public virtual DbSet<C_ItemStockLocWise> C_ItemStockLocWise { get; set; }
    public virtual DbSet<C_Stock_ChargeOut> C_Stock_ChargeOut { get; set; }
    public virtual DbSet<C_Stock_GRN> C_Stock_GRN { get; set; }
    public virtual DbSet<ACBackupItemTable> ACBackupItemTables { get; set; }
    public virtual DbSet<AgingDay> AgingDays { get; set; }
    public virtual DbSet<AuditMasterTable> AuditMasterTables { get; set; }
    public virtual DbSet<BackItemTable3> BackItemTable3 { get; set; }
    public virtual DbSet<BackupItemTable> BackupItemTables { get; set; }
    public virtual DbSet<BackupItemTable2> BackupItemTable2 { get; set; }
    public virtual DbSet<BackupItemTable3> BackupItemTable3 { get; set; }
    public virtual DbSet<BaseRate> BaseRates { get; set; }
    public virtual DbSet<ChargeOutDetail> ChargeOutDetails { get; set; }
    public virtual DbSet<Color> Colors { get; set; }
    public virtual DbSet<CRM_LeadSource> CRM_LeadSource { get; set; }
    public virtual DbSet<CRM_PostSales_NextDueMaintenance> CRM_PostSales_NextDueMaintenance { get; set; }
    public virtual DbSet<CRM_PreSales_ActionPlan> CRM_PreSales_ActionPlan { get; set; }
    public virtual DbSet<CRM_Reasons> CRM_Reasons { get; set; }
    public virtual DbSet<CRM_StatusType> CRM_StatusType { get; set; }
    public virtual DbSet<CRM_TaskMaster> CRM_TaskMaster { get; set; }
    public virtual DbSet<CustomerEstimateDetail> CustomerEstimateDetails { get; set; }
    public virtual DbSet<CustomerEstimateLubricate> CustomerEstimateLubricates { get; set; }
    public virtual DbSet<CustomerEstimatePart> CustomerEstimateParts { get; set; }
    public virtual DbSet<CustomerType> CustomerTypes { get; set; }
    public virtual DbSet<DefaultJob> DefaultJobs { get; set; }
    public virtual DbSet<FCCAction> FCCActions { get; set; }
    public virtual DbSet<FeedBackDetail> FeedBackDetails { get; set; }
    public virtual DbSet<FeedBackMaster> FeedBackMasters { get; set; }
    public virtual DbSet<FeedBackQuestion> FeedBackQuestions { get; set; }
    public virtual DbSet<FeedBackSubDetail> FeedBackSubDetails { get; set; }
    public virtual DbSet<FeedBackSubQuestion> FeedBackSubQuestions { get; set; }
    public virtual DbSet<FFIPDIBillDetail> FFIPDIBillDetails { get; set; }
    public virtual DbSet<FFIPDIBillMaster> FFIPDIBillMasters { get; set; }
    public virtual DbSet<FFIPDIPaymentReceiptMaster> FFIPDIPaymentReceiptMasters { get; set; }
    public virtual DbSet<FFIPDIPaymentReceiptTaxDetail> FFIPDIPaymentReceiptTaxDetails { get; set; }
    public virtual DbSet<FIRDetail> FIRDetails { get; set; }
    public virtual DbSet<FIRMaster> FIRMasters { get; set; }
    public virtual DbSet<FlatRateDetail> FlatRateDetails { get; set; }
    public virtual DbSet<InterRepJobDetail> InterRepJobDetails { get; set; }
    public virtual DbSet<ItemBkp17052017> ItemBkp17052017 { get; set; }
    public virtual DbSet<itemold> itemolds { get; set; }
    public virtual DbSet<ItemsTaxTrx> ItemsTaxTrxes { get; set; }
    public virtual DbSet<ItemStockbak> ItemStockbaks { get; set; }
    public virtual DbSet<ItemStockLedger> ItemStockLedgers { get; set; }
    public virtual DbSet<ItemStockPosition> ItemStockPositions { get; set; }
    public virtual DbSet<JENBillDetail> JENBillDetails { get; set; }
    public virtual DbSet<JENBillMaster> JENBillMasters { get; set; }
    public virtual DbSet<JENWarrantyJob> JENWarrantyJobs { get; set; }
    public virtual DbSet<JobApprovalDetail> JobApprovalDetails { get; set; }
    public virtual DbSet<JobApprovalPartsDetail> JobApprovalPartsDetails { get; set; }
    public virtual DbSet<JobApprovalSupDetail> JobApprovalSupDetails { get; set; }
    public virtual DbSet<JobApprovalSupPart> JobApprovalSupParts { get; set; }
    public virtual DbSet<JobCardDetail> JobCardDetails { get; set; }
    public virtual DbSet<JobCardRecChkList> JobCardRecChkLists { get; set; }
    public virtual DbSet<JobCardReqDetail> JobCardReqDetails { get; set; }
    public virtual DbSet<JobCardRetChkList> JobCardRetChkLists { get; set; }
    public virtual DbSet<JobCardSublet> JobCardSublets { get; set; }
    public virtual DbSet<JobCardTech> JobCardTeches { get; set; }
    public virtual DbSet<JobCardWarrantyLabor> JobCardWarrantyLabors { get; set; }
    public virtual DbSet<JobEstimateDetail> JobEstimateDetails { get; set; }
    public virtual DbSet<JobEstimateMaster> JobEstimateMasters { get; set; }
    public virtual DbSet<JobEstimatePartsDetail> JobEstimatePartsDetails { get; set; }
    public virtual DbSet<JobTypeDetail> JobTypeDetails { get; set; }
    public virtual DbSet<MasterLedger> MasterLedgers { get; set; }
    public virtual DbSet<OutgoingPaymentTaxDetail> OutgoingPaymentTaxDetails { get; set; }
    public virtual DbSet<PartVendorDetail> PartVendorDetails { get; set; }
    public virtual DbSet<PaymentReceiptDetail> PaymentReceiptDetails { get; set; }
    public virtual DbSet<PaymentReceiptTaxDetail> PaymentReceiptTaxDetails { get; set; }
    public virtual DbSet<PNL_UpdateAppDetail> PNL_UpdateAppDetail { get; set; }
    public virtual DbSet<PPRAuditTrail> PPRAuditTrails { get; set; }
    public virtual DbSet<PPRMaster> PPRMasters { get; set; }
    public virtual DbSet<PPRSubletLabor> PPRSubletLabors { get; set; }
    public virtual DbSet<PPRWarrantyJob> PPRWarrantyJobs { get; set; }
    public virtual DbSet<PRDetail> PRDetails { get; set; }
    public virtual DbSet<PRMaster> PRMasters { get; set; }
    public virtual DbSet<ProdCodeConversion> ProdCodeConversions { get; set; }
    public virtual DbSet<PurchaseTarget> PurchaseTargets { get; set; }
    public virtual DbSet<PurInvDetail> PurInvDetails { get; set; }
    public virtual DbSet<RefundPayment> RefundPayments { get; set; }
    public virtual DbSet<Reminder> Reminders { get; set; }
    public virtual DbSet<RepeatJobCardMappingDetail> RepeatJobCardMappingDetails { get; set; }
    public virtual DbSet<ScheduleJobsDetail> ScheduleJobsDetails { get; set; }
    public virtual DbSet<ScheduleLubsDetail> ScheduleLubsDetails { get; set; }
    public virtual DbSet<SchedulePartsDetail> SchedulePartsDetails { get; set; }
    public virtual DbSet<SOS_COMM_PSF_SummaryMonthWise> SOS_COMM_PSF_SummaryMonthWise { get; set; }
    public virtual DbSet<SRDetail> SRDetails { get; set; }
    public virtual DbSet<SRMaster> SRMasters { get; set; }
    public virtual DbSet<TaxPaymentReceiptHead> TaxPaymentReceiptHeads { get; set; }
    public virtual DbSet<TempTable> TempTables { get; set; }
    public virtual DbSet<Tempwarrantylabor> Tempwarrantylabors { get; set; }
    public virtual DbSet<TmpInvoice> TmpInvoices { get; set; }
    public virtual DbSet<Vehicle> Vehicles { get; set; }
    public virtual DbSet<Vehicle_Coy> Vehicle_Coy { get; set; }
    public virtual DbSet<VehicleDelivery> VehicleDeliveries { get; set; }
    public virtual DbSet<VehicleDelivery_Backup> VehicleDelivery_Backup { get; set; }
    public virtual DbSet<VehicleLocTransDetail> VehicleLocTransDetails { get; set; }
    public virtual DbSet<VehiclePriceCategory> VehiclePriceCategories { get; set; }
    public virtual DbSet<VehiclePriceCategory_Copy> VehiclePriceCategory_Copy { get; set; }
    public virtual DbSet<VehicleReturnDetail> VehicleReturnDetails { get; set; }
    public virtual DbSet<WarrantyLabor> WarrantyLabors { get; set; }
    public virtual DbSet<warrantylabor1> warrantylabor1 { get; set; }
    public virtual DbSet<WarrantyLaborBackUp> WarrantyLaborBackUps { get; set; }
    public virtual DbSet<ParentDealer> ParentDealers { get; set; }
    public virtual DbSet<ApprovalEstimateJob> ApprovalEstimateJobs { get; set; }
    public virtual DbSet<ApprovalEstimateSupJob> ApprovalEstimateSupJobs { get; set; }
    public virtual DbSet<BookingOrder_Dashboard> BookingOrder_Dashboard { get; set; }
    public virtual DbSet<JENBillDetailDistinct> JENBillDetailDistincts { get; set; }
    public virtual DbSet<PendingServiceInvoice> PendingServiceInvoices { get; set; }
    public virtual DbSet<PSTUniqueSalesTaxInvoice> PSTUniqueSalesTaxInvoices { get; set; }
    public virtual DbSet<SalesCustomerNotComeInLast6Months> SalesCustomerNotComeInLast6Months { get; set; }
    public virtual DbSet<UniqueInvoiceNO> UniqueInvoiceNOes { get; set; }
    public virtual DbSet<UniqueSalesTaxInvoice> UniqueSalesTaxInvoices { get; set; }
    public virtual DbSet<VIEW2> VIEW2 { get; set; }
    public virtual DbSet<vw_2W_Service_GetPPRSubReport> vw_2W_Service_GetPPRSubReport { get; set; }
    public virtual DbSet<vw_AccCodeCheck> vw_AccCodeCheck { get; set; }
    public virtual DbSet<vw_Advance_Refund_Detail> vw_Advance_Refund_Detail { get; set; }
    public virtual DbSet<vw_AfterSaleInvoiceDetail> vw_AfterSaleInvoiceDetail { get; set; }
    public virtual DbSet<vw_Aging> vw_Aging { get; set; }
    public virtual DbSet<vw_AllPendingServiceJV> vw_AllPendingServiceJV { get; set; }
    public virtual DbSet<vw_DailyCollection_Service> vw_DailyCollection_Service { get; set; }
    public virtual DbSet<vw_EmployeeJobsDetail> vw_EmployeeJobsDetail { get; set; }
    public virtual DbSet<vw_FICSDetail> vw_FICSDetail { get; set; }
    public virtual DbSet<vw_ItemStockPositionLastTR> vw_ItemStockPositionLastTR { get; set; }
    public virtual DbSet<vw_JENApproveDetail> vw_JENApproveDetail { get; set; }
    public virtual DbSet<vw_LastBookingsOfCustomers> vw_LastBookingsOfCustomers { get; set; }
    public virtual DbSet<vw_MaintenanceSchedule> vw_MaintenanceSchedule { get; set; }
    public virtual DbSet<vw_MaintenanceScheduleJobCards> vw_MaintenanceScheduleJobCards { get; set; }
    public virtual DbSet<vw_MonthlyActivity_JobCard_Indviual_Detail> vw_MonthlyActivity_JobCard_Indviual_Detail { get; set; }
    public virtual DbSet<vw_PartSaleReturnDetail> vw_PartSaleReturnDetail { get; set; }
    public virtual DbSet<vw_PartsStockSourceWiseNew> vw_PartsStockSourceWiseNew { get; set; }
    public virtual DbSet<vw_PartStockLocationWise> vw_PartStockLocationWise { get; set; }
    public virtual DbSet<vw_PendingPayments> vw_PendingPayments { get; set; }
    public virtual DbSet<vw_PurchaseRegister> vw_PurchaseRegister { get; set; }
    public virtual DbSet<vw_SalesAging> vw_SalesAging { get; set; }
    public virtual DbSet<Vw_ServiceHistoryMaster> Vw_ServiceHistoryMaster { get; set; }
    public virtual DbSet<Vw_ServiceHistoryMaster_New> Vw_ServiceHistoryMaster_New { get; set; }
    public virtual DbSet<vw_SOS_DeliveryDelayAnalysisDailyWise> vw_SOS_DeliveryDelayAnalysisDailyWise { get; set; }
    public virtual DbSet<vw_SOS_PostSalesFollowup> vw_SOS_PostSalesFollowup { get; set; }
    public virtual DbSet<vw_SOS_PromiseTime> vw_SOS_PromiseTime { get; set; }
    public virtual DbSet<vw_StockSalesTarget_Sorted> vw_StockSalesTarget_Sorted { get; set; }
    public virtual DbSet<vw_SupPartsLube> vw_SupPartsLube { get; set; }
    public virtual DbSet<vw_TemporaryGatePass> vw_TemporaryGatePass { get; set; }
    public virtual DbSet<vw_TemporaryGatePassDetail> vw_TemporaryGatePassDetail { get; set; }
    public virtual DbSet<VW_VehicleDeliveryMasterDetail> VW_VehicleDeliveryMasterDetail { get; set; }
    public virtual DbSet<vw_VehicleDeliveryNew> vw_VehicleDeliveryNew { get; set; }
    public virtual DbSet<vwTaxDeduction> vwTaxDeductions { get; set; }

    [DbFunction("sngonclo_BMSEntities", "fn_AllInvoiceDate")]
    public virtual IQueryable<fn_AllInvoiceDate_Result> fn_AllInvoiceDate(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_AllInvoiceDate_Result>("[sngonclo_BMSEntities].[fn_AllInvoiceDate](@DealerCode, @FromDate, @ToDate, @Type)", dealerCodeParameter, fromDateParameter, toDateParameter, typeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_AllPaymentInvoice")]
    public virtual IQueryable<fn_AllPaymentInvoice_Result> fn_AllPaymentInvoice(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_AllPaymentInvoice_Result>("[sngonclo_BMSEntities].[fn_AllPaymentInvoice](@DealerCode, @FromDate, @ToDate)", dealerCodeParameter, fromDateParameter, toDateParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_AsOnVehicleStock")]
    public virtual IQueryable<fn_AsOnVehicleStock_Result> fn_AsOnVehicleStock(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_AsOnVehicleStock_Result>("[sngonclo_BMSEntities].[fn_AsOnVehicleStock](@DealerCode, @FromDate, @ToDate)", dealerCodeParameter, fromDateParameter, toDateParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_CRM_PostSales_NextDueMaintenance")]
    public virtual IQueryable<fn_CRM_PostSales_NextDueMaintenance_Result> fn_CRM_PostSales_NextDueMaintenance(string dealerCode, string jobCardCode)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var jobCardCodeParameter = jobCardCode != null ?
            new ObjectParameter("JobCardCode", jobCardCode) :
            new ObjectParameter("JobCardCode", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CRM_PostSales_NextDueMaintenance_Result>("[sngonclo_BMSEntities].[fn_CRM_PostSales_NextDueMaintenance](@DealerCode, @JobCardCode)", dealerCodeParameter, jobCardCodeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_CustomerRetention_JobCards")]
    public virtual IQueryable<fn_CustomerRetention_JobCards_Result> fn_CustomerRetention_JobCards()
    {
        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CustomerRetention_JobCards_Result>("[sngonclo_BMSEntities].[fn_CustomerRetention_JobCards]()");
    }

    [DbFunction("sngonclo_BMSEntities", "fn_DailyCollection")]
    public virtual IQueryable<fn_DailyCollection_Result> fn_DailyCollection(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string invoiceType)
    {
        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var invoiceTypeParameter = invoiceType != null ?
            new ObjectParameter("InvoiceType", invoiceType) :
            new ObjectParameter("InvoiceType", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_DailyCollection_Result>("[sngonclo_BMSEntities].[fn_DailyCollection](@FromDate, @ToDate, @InvoiceType)", fromDateParameter, toDateParameter, invoiceTypeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_InvoiceDate")]
    public virtual IQueryable<fn_InvoiceDate_Result> fn_InvoiceDate(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_InvoiceDate_Result>("[sngonclo_BMSEntities].[fn_InvoiceDate](@DealerCode, @FromDate, @ToDate, @Type)", dealerCodeParameter, fromDateParameter, toDateParameter, typeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_InvoiceDetail")]
    public virtual IQueryable<fn_InvoiceDetail_Result> fn_InvoiceDetail(string dealerCode, string invoiceType)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var invoiceTypeParameter = invoiceType != null ?
            new ObjectParameter("InvoiceType", invoiceType) :
            new ObjectParameter("InvoiceType", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_InvoiceDetail_Result>("[sngonclo_BMSEntities].[fn_InvoiceDetail](@DealerCode, @InvoiceType)", dealerCodeParameter, invoiceTypeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_MonthlyActivity_JobCards")]
    public virtual IQueryable<fn_MonthlyActivity_JobCards_Result> fn_MonthlyActivity_JobCards()
    {
        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MonthlyActivity_JobCards_Result>("[sngonclo_BMSEntities].[fn_MonthlyActivity_JobCards]()");
    }

    [DbFunction("sngonclo_BMSEntities", "fn_MonthlyActivity_JobCards_Proportion")]
    public virtual IQueryable<fn_MonthlyActivity_JobCards_Proportion_Result> fn_MonthlyActivity_JobCards_Proportion()
    {
        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MonthlyActivity_JobCards_Proportion_Result>("[sngonclo_BMSEntities].[fn_MonthlyActivity_JobCards_Proportion]()");
    }

    [DbFunction("sngonclo_BMSEntities", "fn_MonthlyActivity_TurnOver_Parts_PartsTotal")]
    public virtual IQueryable<fn_MonthlyActivity_TurnOver_Parts_PartsTotal_Result> fn_MonthlyActivity_TurnOver_Parts_PartsTotal(string dealerCode, string invTypes, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var invTypesParameter = invTypes != null ?
            new ObjectParameter("InvTypes", invTypes) :
            new ObjectParameter("InvTypes", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MonthlyActivity_TurnOver_Parts_PartsTotal_Result>("[sngonclo_BMSEntities].[fn_MonthlyActivity_TurnOver_Parts_PartsTotal](@DealerCode, @InvTypes, @FromDate, @ToDate)", dealerCodeParameter, invTypesParameter, fromDateParameter, toDateParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_MonthlyActivity_TurnOver_Parts_SGPPartsTotal")]
    public virtual IQueryable<fn_MonthlyActivity_TurnOver_Parts_SGPPartsTotal_Result> fn_MonthlyActivity_TurnOver_Parts_SGPPartsTotal(string dealerCode, string invTypes, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var invTypesParameter = invTypes != null ?
            new ObjectParameter("InvTypes", invTypes) :
            new ObjectParameter("InvTypes", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MonthlyActivity_TurnOver_Parts_SGPPartsTotal_Result>("[sngonclo_BMSEntities].[fn_MonthlyActivity_TurnOver_Parts_SGPPartsTotal](@DealerCode, @InvTypes, @FromDate, @ToDate)", dealerCodeParameter, invTypesParameter, fromDateParameter, toDateParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_OnOrderVehicleStock")]
    public virtual IQueryable<fn_OnOrderVehicleStock_Result> fn_OnOrderVehicleStock(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_OnOrderVehicleStock_Result>("[sngonclo_BMSEntities].[fn_OnOrderVehicleStock](@DealerCode, @FromDate, @ToDate, @Type)", dealerCodeParameter, fromDateParameter, toDateParameter, typeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_PaymentCollection")]
    public virtual IQueryable<fn_PaymentCollection_Result> fn_PaymentCollection(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string invoiceType)
    {
        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var invoiceTypeParameter = invoiceType != null ?
            new ObjectParameter("InvoiceType", invoiceType) :
            new ObjectParameter("InvoiceType", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_PaymentCollection_Result>("[sngonclo_BMSEntities].[fn_PaymentCollection](@FromDate, @ToDate, @InvoiceType)", fromDateParameter, toDateParameter, invoiceTypeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_PaymentInvoice")]
    public virtual IQueryable<fn_PaymentInvoice_Result> fn_PaymentInvoice(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string type)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_PaymentInvoice_Result>("[sngonclo_BMSEntities].[fn_PaymentInvoice](@DealerCode, @FromDate, @ToDate, @Type)", dealerCodeParameter, fromDateParameter, toDateParameter, typeParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "fn_VehicleStock")]
    public virtual IQueryable<fn_VehicleStock_Result> fn_VehicleStock(string dealerCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {
        var dealerCodeParameter = dealerCode != null ?
            new ObjectParameter("DealerCode", dealerCode) :
            new ObjectParameter("DealerCode", typeof(string));

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));

        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_VehicleStock_Result>("[sngonclo_BMSEntities].[fn_VehicleStock](@DealerCode, @FromDate, @ToDate)", dealerCodeParameter, fromDateParameter, toDateParameter);
    }

    [DbFunction("sngonclo_BMSEntities", "JC_Jobs")]
    public virtual IQueryable<JC_Jobs_Result> JC_Jobs()
    {
        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JC_Jobs_Result>("[sngonclo_BMSEntities].[JC_Jobs]()");
    }

    [DbFunction("sngonclo_BMSEntities", "Split")]
    public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
    {
        var stringParameter = @string != null ?
            new ObjectParameter("String", @string) :
            new ObjectParameter("String", typeof(string));

        var delimiterParameter = delimiter != null ?
            new ObjectParameter("Delimiter", delimiter) :
            new ObjectParameter("Delimiter", typeof(string));

        return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[sngonclo_BMSEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
    }
}
